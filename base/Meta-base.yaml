mode: rule              # 规则模式：rule（规则） / global（全局代理）/ direct（全局直连）/ script (脚本) 
mixed-port: 7890        # 混合端口，HTTP和SOCKS5用一个端口
ipv6: true              # 开启 IPv6 总开关，关闭阻断所有 IPv6 链接和屏蔽 DNS 请求 AAAA 记录
log-level: info         # 设置日志输出级别 (5 个级别：silent / error / warning / info / debug）
allow-lan: false        # 允许局域网的连接（共享代理）
bind-address: "*"       # 监听IP白名单，可绑定单个IPv4和v6地址，"*" 为绑定所有IP地址，仅在将allow-lan设置为true时适用

authentication:         # http,socks入口的验证用户名，密码
  - "user11name:pass22word"
skip-auth-prefixes:     # 设置跳过验证的IP段
  - 127.0.0.1/8
  - ::1/128
  - 192.168.0.1/16

unified-delay: false    # 统一延迟，更换延迟计算方式，去除握手等额外延迟
tcp-concurrent: true    #【Meta专属】TCP 并发连接所有 IP, 将使用最快握手的 TCP

keep-alive-interval: 300    # 默认15s    # TCP keep alive interval
clash-for-android:
  append-system-dns: false

external-controller: 127.0.0.1:54233     # 外部控制器监听地址，可以使用 RESTful API 来控制你的 clash 内核
#external-ui: ui
#external-ui-url: "https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip"

find-process-mode: strict   # 匹配所有进程（always/strict/off）
global-client-fingerprint: chrome   # 全局 TLS 指纹，优先低于 proxy 内的 client-fingerprint
                                    # 可选： "chrome","firefox","safari","ios","random","none" options.
profile:
  store-selected: true      # 存储 select 选择记录
  store-fake-ip: true       # 持久化 fake-ip

geodata-mode: true          #【Meta专属】使用geoip.dat数据库(默认：false使用mmdb数据库)
geo-auto-update: false      # 是否自动更新 geodata
geo-update-interval: 24     # 更新间隔，单位：小时
geox-url:                   # 自定义 geodata url, 需要有代理的前提才能下载geoip和geosite
  geoip: "https://mirror.ghproxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip-lite.dat"
#  geosite: "https://mirror.ghproxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geosite.dat"
#  mmdb: "https://mirror.ghproxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/country-lite.mmdb"

sniffer:                    # 嗅探域名 可选配置
  enable: true
#  parse-pure-ip: true      # 是否使用嗅探结果作为实际访问，默认 true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:                    # TLS 默认嗅探 443
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  skip-domain:
    - "Mijia Cloud"
  force-domain: []          # 强制对此域名进行嗅探
  
tun:
  enable: true
  stack: mixed
  dns-hijack:
    - "any:53"
  auto-route: true              # 自动设置全局路由，可以自动将全局流量路由进入tun网卡
  auto-detect-interface: true   # 自动识别出口网卡

dns:
  enable: true
  prefer-h3: true               # 是否开启 DOH 的 http/3
  use-hosts: true               # 是否查询系统 hosts
  listen: 0.0.0.0:53            # DNS 监听地址
  ipv6: true                    # IPV6解析开关；如果为false，将返回ipv6结果为空
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16  # fakeip 下的 IP 段设置，tun 网卡的默认 ip 也使用此值
  fake-ip-filter:
    - "+.lan"
    - "+.local"
    - "*.msftncsi.com"
    - "*.msftconnecttest.com"
  default-nameserver:           # 用于解析 nameserver，fallback 以及其他DNS服务器配置的，DNS 服务域名
    - 223.5.5.5                 # 只能使用纯 IP 地址，可使用加密 DNS
    - 119.29.29.29
    - 192.168.10.1
#    - 8.8.8.8
#    - 1.1.1.1
#    - 114.114.114.114
  nameserver:
    - https://dns.alidns.com/dns-query
    - https://doh.pub/dns-query
#    - 223.5.5.5
#    - 119.29.29.29
#    - 8.8.8.8
#    - 1.1.1.1
#    - 192.168.10.1
#    - 114.114.114.114
#  proxy-server-nameserver:                  # 专用于节点域名解析的 DNS 服务器，非必要配置项
#    - https://doh.pub/dns-query             # 配置服务器若查询失败将使用 nameserver，非并发查询
#  nameserver-policy:                        # 指定域名查询的解析服务器
#    'www.baidu.com': '114.114.114.114'
#    "rule-set:private":
#      - https://doh.pub/dns-query
#      - https://dns.alidns.com/dns-query
#    "rule-set:geolocation-!cn":
#      - "https://dns.cloudflare.com/dns-query#dns"
#      - "https://dns.google/dns-query#dns"
